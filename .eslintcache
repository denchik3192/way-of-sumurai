[{"E:\\Denis\\way-of-sumurai\\src\\reportWebVitals.js":"1","E:\\Denis\\way-of-sumurai\\src\\Components\\Header\\Header.jsx":"2","E:\\Denis\\way-of-sumurai\\src\\Components\\Dialogs\\Dialogs.jsx":"3","E:\\Denis\\way-of-sumurai\\src\\Components\\Friends\\Friends.jsx":"4","E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.jsx":"5","E:\\Denis\\way-of-sumurai\\src\\Components\\Dialogs\\DialogsItem\\DialogsItem.jsx":"6","E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\MyPosts\\Post\\Post.jsx":"7","E:\\Denis\\way-of-sumurai\\src\\App.js":"8","E:\\Denis\\way-of-sumurai\\src\\redux\\users-reduser.js":"9","E:\\Denis\\way-of-sumurai\\src\\Components\\Navbar\\Navbar.jsx":"10","E:\\Denis\\way-of-sumurai\\src\\Components\\Users\\Users.jsx":"11","E:\\Denis\\way-of-sumurai\\src\\Components\\Friends\\FriendsItem\\FriendsItem.jsx":"12","E:\\Denis\\way-of-sumurai\\src\\Components\\Users\\UsersContainer.jsx":"13","E:\\Denis\\way-of-sumurai\\src\\Components\\Common\\Preloader\\Preloader.js":"14","E:\\Denis\\way-of-sumurai\\src\\index.js":"15","E:\\Denis\\way-of-sumurai\\src\\redux\\sidebar-reducer.js":"16","E:\\Denis\\way-of-sumurai\\src\\Components\\Dialogs\\DialogsContainer.jsx":"17","E:\\Denis\\way-of-sumurai\\src\\Components\\News\\News.jsx":"18","E:\\Denis\\way-of-sumurai\\src\\redux\\dialogs-reducer.js":"19","E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\MyPosts\\MyPosts.jsx":"20","E:\\Denis\\way-of-sumurai\\src\\Components\\Settings\\Settings.jsx":"21","E:\\Denis\\way-of-sumurai\\src\\Components\\Musik\\Musik.jsx":"22","E:\\Denis\\way-of-sumurai\\src\\redux\\profile-reducer.js":"23","E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\ProfileContainer.jsx":"24","E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\Profile.jsx":"25","E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.jsx":"26","E:\\Denis\\way-of-sumurai\\src\\redux\\redux-store.js":"27","E:\\Denis\\way-of-sumurai\\src\\Components\\Dialogs\\Message\\Message.jsx":"28","E:\\Denis\\way-of-sumurai\\src\\redux\\auth-reducer.js":"29","E:\\Denis\\way-of-sumurai\\src\\Components\\Header\\HeaderContainer.jsx":"30","E:\\Denis\\way-of-sumurai\\src\\API\\API.js":"31","E:\\Denis\\way-of-sumurai\\src\\Components\\Login\\Login.jsx":"32","E:\\Denis\\way-of-sumurai\\src\\hoc\\withAuthRedirect.js":"33","E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileStatus.jsx":"34"},{"size":375,"mtime":1611995882281,"results":"35","hashOfConfig":"36"},{"size":7478,"mtime":1613409696841,"results":"37","hashOfConfig":"36"},{"size":1518,"mtime":1613410755540,"results":"38","hashOfConfig":"36"},{"size":374,"mtime":1611995882168,"results":"39","hashOfConfig":"36"},{"size":1652,"mtime":1611995882213,"results":"40","hashOfConfig":"36"},{"size":350,"mtime":1611995882167,"results":"41","hashOfConfig":"36"},{"size":426,"mtime":1611995882213,"results":"42","hashOfConfig":"36"},{"size":1846,"mtime":1613410568464,"results":"43","hashOfConfig":"36"},{"size":4040,"mtime":1613307122037,"results":"44","hashOfConfig":"36"},{"size":1442,"mtime":1611995882210,"results":"45","hashOfConfig":"36"},{"size":2720,"mtime":1613306942271,"results":"46","hashOfConfig":"36"},{"size":331,"mtime":1611995882169,"results":"47","hashOfConfig":"36"},{"size":2791,"mtime":1613666935882,"results":"48","hashOfConfig":"36"},{"size":263,"mtime":1612112724676,"results":"49","hashOfConfig":"36"},{"size":1048,"mtime":1611995882278,"results":"50","hashOfConfig":"36"},{"size":153,"mtime":1611995882280,"results":"51","hashOfConfig":"36"},{"size":1565,"mtime":1613665587870,"results":"52","hashOfConfig":"36"},{"size":154,"mtime":1611995882211,"results":"53","hashOfConfig":"36"},{"size":1384,"mtime":1611995882278,"results":"54","hashOfConfig":"36"},{"size":1174,"mtime":1611995882212,"results":"55","hashOfConfig":"36"},{"size":170,"mtime":1611995882243,"results":"56","hashOfConfig":"36"},{"size":193,"mtime":1611995882209,"results":"57","hashOfConfig":"36"},{"size":2480,"mtime":1614412303117,"results":"58","hashOfConfig":"36"},{"size":1345,"mtime":1614412303117,"results":"59","hashOfConfig":"36"},{"size":538,"mtime":1614412303116,"results":"60","hashOfConfig":"36"},{"size":821,"mtime":1614412303116,"results":"61","hashOfConfig":"36"},{"size":742,"mtime":1614444920540,"results":"62","hashOfConfig":"36"},{"size":243,"mtime":1611995882167,"results":"63","hashOfConfig":"36"},{"size":1067,"mtime":1613409696844,"results":"64","hashOfConfig":"36"},{"size":623,"mtime":1613409696842,"results":"65","hashOfConfig":"36"},{"size":1389,"mtime":1614412303115,"results":"66","hashOfConfig":"36"},{"size":929,"mtime":1614501613754,"results":"67","hashOfConfig":"36"},{"size":795,"mtime":1613579181816,"results":"68","hashOfConfig":"36"},{"size":1500,"mtime":1614413778599,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"cl2ecl",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Denis\\way-of-sumurai\\src\\reportWebVitals.js",[],["156","157"],"E:\\Denis\\way-of-sumurai\\src\\Components\\Header\\Header.jsx",[],["158","159"],"E:\\Denis\\way-of-sumurai\\src\\Components\\Dialogs\\Dialogs.jsx",[],["160","161"],"E:\\Denis\\way-of-sumurai\\src\\Components\\Friends\\Friends.jsx",[],["162","163"],"E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.jsx",["164"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {updateNewPostTextCreator, addPostCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n//     // let state = props.store.getState();\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             { (store) =>{\r\n//                 let state = store.getState();\r\n\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostCreator());\r\n//                     } \r\n            \r\n//                 let onPostChange = (text) => {\r\n            \r\n//                     let action = updateNewPostTextCreator(text);\r\n//                     store.dispatch(action);\r\n//                 }\r\n\r\n//                 return <MyPosts updateNewPostText={onPostChange} \r\n//                 addPost={addPost} \r\n//                 posts={state.profilePage.posts}\r\n//                 newPostText={state.profilePage.newPostText}/>\r\n//             }\r\n            \r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n\r\nlet mapStateToProps =(state)=>{\r\n    return{\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        addPost: () =>{\r\n            dispatch(addPostCreator());\r\n        },\r\n        updateNewPostText: (text) =>{\r\n            let action = updateNewPostTextCreator(text);\r\n            dispatch(action);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","E:\\Denis\\way-of-sumurai\\src\\Components\\Dialogs\\DialogsItem\\DialogsItem.jsx",[],"E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\MyPosts\\Post\\Post.jsx",[],"E:\\Denis\\way-of-sumurai\\src\\App.js",[],["165","166"],"E:\\Denis\\way-of-sumurai\\src\\redux\\users-reduser.js",["167"],"import { usersAPI } from './../API/API';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    // debugger;\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                //users:[...state.users],\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                //users:[...state.users],\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter(id => id != action.userID)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const followSuccess = (userID) => ({ type: FOLLOW, userID })\r\nexport const unfollowSuccess = (userID) => ({ type: UNFOLLOW, userID })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userID) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID })\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const follow = (userID) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userID));\r\n        usersAPI.follow(userID)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userID));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userID))\r\n            });\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const unfollow = (userID) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userID));\r\n        usersAPI.unfollow(userID)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userID));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userID))\r\n        });\r\n\r\n    }\r\n\r\n}\r\nexport default usersReducer;","E:\\Denis\\way-of-sumurai\\src\\Components\\Navbar\\Navbar.jsx",[],"E:\\Denis\\way-of-sumurai\\src\\Components\\Users\\Users.jsx",["168","169"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userPhoto from '../../../src/assets/images/user.jpg';\r\nimport s from './users.module.css'\r\nimport * as axios from 'axios';\r\nimport { usersAPI } from '../../API/API';\r\n\r\nlet Users = (props) => {\r\n\r\n        let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n        let pages = [];\r\n\r\n        for (let i=1; i <= pagesCount; i++){\r\n            pages.push(i);\r\n        }\r\n        // debugger;\r\n        return <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p && s.selectedPage}\r\n                    onClick = {()=> {\r\n                        props.onPageChanged(p);\r\n                    }}>{p}</span>\r\n                })}   \r\n                \r\n            </div>\r\n            \r\n            {props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto} alt=\"userPhoto\" />\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n\r\n                            {u.followed\r\n                                ? <button disabled={props.followingInProgress\r\n                                    .some(id => id === u.id)} \r\n                                        onClick={() => { props.unfollow(u.id) }}>  \r\n                                        Unfollow </button>\r\n\r\n                                : <button disabled={props.followingInProgress\r\n                                        .some(id => id === u.id)} \r\n                                        onClick={() => { props.follow(u.id) }}>\r\n        \r\n                                    Follow </button>}\r\n\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>\r\n                                {u.name}\r\n                            </div>\r\n                            <div>\r\n                                {u.status}\r\n                            </div>\r\n                        </span>\r\n\r\n\r\n                        <span>\r\n                            <div>\r\n                                {\"u.location.country\"}\r\n                            </div>\r\n                            <div>\r\n                                {\"u.location.city\"}\r\n                            </div>\r\n                        </span>\r\n                    </span>\r\n\r\n\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n\r\n\r\n\r\nexport default Users;\r\n",["170","171"],"E:\\Denis\\way-of-sumurai\\src\\Components\\Friends\\FriendsItem\\FriendsItem.jsx",["172"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './friends.module.css'\r\n\r\n\r\n\r\nconst FriendsItem = (props) => {\r\n\r\n    return (\r\n        <div className={s.friend}>\r\n            {props.name}\r\n            <img src={props.img} alt=\"logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsItem;","E:\\Denis\\way-of-sumurai\\src\\Components\\Users\\UsersContainer.jsx",["173"],"import React from 'react';\r\nimport Users from './Users';\r\nimport {connect} from \"react-redux\";\r\nimport {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers} from './../../redux/users-reduser';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { usersAPI } from '../../API/API';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n        componentDidMount() {\r\n\r\n            this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n            \r\n        }\r\n    \r\n        onPageChanged = (pageNumber) => {\r\n\r\n            this.props.getUsers(this.props.pageNumber, this.props.pageSize);\r\n        }\r\n    \r\n        render() {\r\n            // debugger;\r\n            return<>\r\n            {this.props.isFetching ? <Preloader/>  : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                            pageSize={this.props.pageSize}\r\n                            pagesCount={this.props.pagesCount}\r\n                            currentPage={this.props.currentPage}\r\n                            users={this.props.users}\r\n                            follow={this.props.follow}\r\n                            unfollow={this.props.unfollow}\r\n                            onPageChanged={this.onPageChanged}\r\n                            followingInProgress={this.props.followingInProgress}\r\n                            />\r\n            </>\r\n        }\r\n}\r\n\r\nlet mapStateToProps =(state)=>{\r\n    return{\r\n        users:state.usersPage.users,\r\n        pageSize:state.usersPage.pageSize,\r\n        totalUsersCount:state.usersPage.totalUsersCount,\r\n        currentPage:state.usersPage.currentPage,\r\n        isFetching:state.usersPage.isFetching,\r\n        followingInProgress:state.usersPage.followingInProgress\r\n\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps =(dispatch)=>{\r\n//     return{\r\n//         follow:(userId) => {\r\n//             dispatch(followAC(userId));\r\n//         },\r\n//         unfollow:(userId) => {\r\n//             dispatch(unfollowAC(userId));\r\n//         },\r\n//         setUsers:(users) => {\r\n//             dispatch(setUsersAC(users));\r\n//         },\r\n//         setCurrentPage:(pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber));\r\n//         },\r\n//         setTotalUsersCount:(totalCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount));\r\n//         },\r\n//         toggleIsFetching:(isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching));\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, \r\n        { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers }),\r\n    \r\n    \r\n\r\n)(UsersContainer);\r\n\r\n\r\n\r\n","E:\\Denis\\way-of-sumurai\\src\\Components\\Common\\Preloader\\Preloader.js",["174"],"import preloader from '../../../assets/images/preloader.gif';\r\nimport React from 'react';\r\n\r\n\r\nlet Preloader = (props) => {\r\n\r\n    return <div style ={ { backgroundColor: 'white'} }>\r\n        <img src={preloader} />\r\n        </div>\r\n}\r\n\r\nexport default Preloader;","E:\\Denis\\way-of-sumurai\\src\\index.js",[],"E:\\Denis\\way-of-sumurai\\src\\redux\\sidebar-reducer.js",[],"E:\\Denis\\way-of-sumurai\\src\\Components\\Dialogs\\DialogsContainer.jsx",["175"],"import React from 'react';\r\nimport { updateNewMessageTextCreator, addMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n// const DialogsContainer = () => {\r\n//     // debugger;\r\n\r\n//     // return <StoreContext.Consumer>\r\n//     //     { (store) => {\r\n//     //             let state = store.getState().dialogsPage;\r\n\r\n//     //             let addMessage = () => {\r\n//     //                 store.dispatch(addMessageCreator());\r\n//     //             }\r\n//     //             let onMessageChange = (text) => {\r\n\r\n//     //                 store.dispatch(updateNewMessageTextCreator(text));\r\n//     //             }\r\n//     //             return <Dialogs updateNewMessageText={onMessageChange}\r\n//     //                 addMessage={addMessage}\r\n//     //                 dialogsPage={state} />\r\n\r\n//     //         }\r\n//     //     }\r\n//     //     </StoreContext.Consumer>\r\n\r\n\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        \r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextCreator(text));\r\n        },\r\n        addMessage: () => {\r\n            dispatch(addMessageCreator());\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n\r\n)(Dialogs);","E:\\Denis\\way-of-sumurai\\src\\Components\\News\\News.jsx",[],"E:\\Denis\\way-of-sumurai\\src\\redux\\dialogs-reducer.js",[],"E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\MyPosts\\MyPosts.jsx",[],"E:\\Denis\\way-of-sumurai\\src\\Components\\Settings\\Settings.jsx",[],"E:\\Denis\\way-of-sumurai\\src\\Components\\Musik\\Musik.jsx",["176"],"import React from 'react';\r\nimport s from './musik.module.css';\r\n\r\n\r\nconst Musik = (props) => {\r\n    return(\r\n        <div>\r\n            Musik\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Musik;","E:\\Denis\\way-of-sumurai\\src\\redux\\profile-reducer.js",["177"],"import { usersAPI } from './../API/API'\r\nimport { profileAPI } from './../API/API'\r\n\r\nconst UPDATE_NEW_POST_TEXT= 'UPDATE-NEW-POST-TEXT';\r\nconst ADD_POST= 'ADD-POST';\r\nconst SET_USER_PROFILE= 'SET_USER_PROFILE';\r\nconst SET_STATUS= 'SET_STATUS';\r\nconst UPDATE_USER_STATUS= 'UPDATE_USER_STATUS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, it\\'s my first post', likesCount: 12 },\r\n        { id: 2, message: 'Hi, it\\'s my second post', likesCount: 122 },\r\n\r\n    ],\r\n    newPostText: 'loo',\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => { \r\n\r\n    switch (action.type) {\r\n        case ADD_POST:  {\r\n                let newPost = {\r\n                    id: 5,\r\n                    message: state.newPostText,\r\n                    likesCount: 1\r\n                }\r\n                return {\r\n                    ...state,\r\n                    posts:[...state.posts, newPost],\r\n                    newPostText:''\r\n                };\r\n                \r\n            }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return{...state,\r\n                newPostText:action.newText\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return{...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return{...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n\r\n                default:\r\n                    return state;\r\n    }\r\n    \r\n}\r\nexport const addPostCreator = () => ({ type:ADD_POST })\r\n\r\nexport const updateNewPostTextCreator = (text) => \r\n({ type:UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport const setUserProfile = (profile) =>({type:SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) =>({type:SET_STATUS, status})\r\n\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n        usersAPI.getProfile(userId).then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\n\r\n\r\nexport const getStatus = (userId) => (dispatch) => { \r\n    profileAPI.getStatus(userId)\r\n    .then(response => {\r\n        // debugger;\r\n        dispatch(setStatus(response.data));\r\n});\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n\r\n    profileAPI.updateStatus(status)\r\n    .then(response => {\r\n        if (response.data.resultCode === 0){\r\n            dispatch(setStatus(status));\r\n        }\r\n        \r\n});\r\n\r\n}\r\n\r\n\r\nexport default profileReducer;","E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\ProfileContainer.jsx",["178","179"],"E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\Profile.jsx",["180"],"import React from 'react';\r\n// import { addPost } from '../../redux/state';\r\n\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport s from './profile.module.css';\r\n\r\nconst Profile = (props) => {\r\n// debugger;\r\n    return (\r\n        <div>\r\n            \r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileInfo.jsx",["181"],"E:\\Denis\\way-of-sumurai\\src\\redux\\redux-store.js",[],"E:\\Denis\\way-of-sumurai\\src\\Components\\Dialogs\\Message\\Message.jsx",[],"E:\\Denis\\way-of-sumurai\\src\\redux\\auth-reducer.js",[],"E:\\Denis\\way-of-sumurai\\src\\Components\\Header\\HeaderContainer.jsx",["182","183"],"import * as axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport {getAuthUserData} from '../../redux/auth-reducer'\r\nimport { authAPI } from '../../API/API';\r\n\r\n//4vAbLW!E7Qcmy7X\r\nclass HeaderContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getAuthUserData();\r\n  }\r\n\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n  })\r\n  \r\n\r\nexport default connect(mapStateToProps, { getAuthUserData })(HeaderContainer);","E:\\Denis\\way-of-sumurai\\src\\API\\API.js",[],"E:\\Denis\\way-of-sumurai\\src\\Components\\Login\\Login.jsx",[],"E:\\Denis\\way-of-sumurai\\src\\hoc\\withAuthRedirect.js",["184"],"import { Component } from \"react\"\r\nimport React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=> {\r\n    return{\r\n        \r\n        isAuth: state.auth.isAuth\r\n    }\r\n    \r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props}/> //прокидываем пропсы {...props} в целеыую компоненту \r\n        }\r\n\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n        return ConnectedAuthRedirectComponent;\r\n}\r\n    ","E:\\Denis\\way-of-sumurai\\src\\Components\\Profile\\MyPosts\\ProfileInfo\\ProfileStatus.jsx",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"185","replacedBy":"189"},{"ruleId":"187","replacedBy":"190"},{"ruleId":"185","replacedBy":"191"},{"ruleId":"187","replacedBy":"192"},{"ruleId":"185","replacedBy":"193"},{"ruleId":"187","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"185","replacedBy":"199"},{"ruleId":"187","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":68,"column":65,"nodeType":"203","messageId":"204","endLine":68,"endColumn":67},{"ruleId":"195","severity":1,"message":"205","line":5,"column":13,"nodeType":"197","messageId":"198","endLine":5,"endColumn":18},{"ruleId":"195","severity":1,"message":"206","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":18},{"ruleId":"185","replacedBy":"207"},{"ruleId":"187","replacedBy":"208"},{"ruleId":"195","severity":1,"message":"209","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":17},{"ruleId":"195","severity":1,"message":"206","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":18},{"ruleId":"210","severity":1,"message":"211","line":8,"column":9,"nodeType":"212","endLine":8,"endColumn":32},{"ruleId":"195","severity":1,"message":"196","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"213","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":9},{"ruleId":"195","severity":1,"message":"214","line":8,"column":7,"nodeType":"197","messageId":"198","endLine":8,"endColumn":25},{"ruleId":"195","severity":1,"message":"215","line":6,"column":22,"nodeType":"197","messageId":"198","endLine":6,"endColumn":30},{"ruleId":"195","severity":1,"message":"216","line":8,"column":10,"nodeType":"197","messageId":"198","endLine":8,"endColumn":26},{"ruleId":"195","severity":1,"message":"213","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":9},{"ruleId":"210","severity":1,"message":"211","line":17,"column":13,"nodeType":"212","endLine":17,"endColumn":52},{"ruleId":"195","severity":1,"message":"205","line":1,"column":13,"nodeType":"197","messageId":"198","endLine":1,"endColumn":18},{"ruleId":"195","severity":1,"message":"217","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":17},{"ruleId":"195","severity":1,"message":"218","line":1,"column":10,"nodeType":"197","messageId":"198","endLine":1,"endColumn":19},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],["219"],["220"],["219"],["220"],["219"],["220"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["219"],["220"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'axios' is defined but never used.","'usersAPI' is defined but never used.",["219"],["220"],"'NavLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'s' is defined but never used.","'UPDATE_USER_STATUS' is assigned a value but never used.","'Redirect' is defined but never used.","'withAuthRedirect' is defined but never used.","'authAPI' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]