{"version":3,"sources":["Components/Dialogs/dialogs.module.css","Components/Dialogs/DialogsItem/DialogsItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength10","maxLengthCreator","ReduxDialogsForm","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","messageElememts","messages","newMessageText","isAuth","dialogsItems","values","addMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","addMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sGCYnKC,EATI,SAACC,GAEhB,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAjC,SAAsCN,EAAMO,UCMzCC,EAXC,SAACR,GAGb,OACI,qBAAKC,UAAWC,IAAEO,QAAlB,SAA4BT,EAAMS,W,kCCmCpCC,EAAcC,YAAiB,IAiB/BC,EAAmBC,YAAW,CAACC,KAAM,wBAAlBD,EAfF,SAACb,GACpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACA,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAU,WACjBC,SAAU,CAACC,IAAUV,GAAeH,KAAK,iBAAiBc,YAAY,oBAG9E,8BACI,wBAAQpB,UAAU,iBAAlB,0BAOOqB,EApDC,SAACtB,GACb,IAAIuB,EAAQvB,EAAMwB,YAEdC,EACAF,EAAMG,QAAQC,KAAI,SAAAxB,GAAM,OAAI,cAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAsBD,GAAIH,EAAOG,IAAtBH,EAAOG,OACvEsB,EACAL,EAAMM,SAASF,KAAI,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQH,OAE7DiB,EAAMO,eAQ3B,OAAK9B,EAAM+B,OAGP,sBAAK9B,UAAWC,IAAEwB,QAAlB,UACI,qBAAKzB,UAAWC,IAAE8B,aAAlB,SACKP,IAGL,sBAAKxB,UAAWC,IAAE2B,SAAlB,UACI,8BAAMD,IAEN,cAAChB,EAAD,CAAkBG,SAhBV,SAACkB,GAEjBjC,EAAMkC,WAAWD,EAAOH,yBAGF,cAAC,IAAD,CAAUzB,GAAI,Y,+CCnBxC8B,EAA6B,SAACZ,GAC9B,MAAM,CAEFQ,OAAQR,EAAMa,KAAKL,S,OC0CZM,sBACXC,aAlBkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAKF,SAACe,GACtB,MAAO,CACHL,WAAY,SAACJ,GACTS,EAASC,YAAkBV,UD9BP,SAACW,GAAe,IAEtCC,EAFqC,uKAKnC,OAAKC,KAAK3C,MAAM+B,OAET,cAACU,EAAD,eAAeE,KAAK3C,QAFI,cAAC,IAAD,CAAUK,GAAI,eALV,GAEXuC,IAAMH,WAalC,OAFiCH,YAAQH,EAARG,CAAqCI,KCwB/DL,CAIbf","file":"static/js/5.6abb5451.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__UC4Wl\",\"dialogsItems\":\"dialogs_dialogsItems__3mbIS\",\"active\":\"dialogs_active__4iQ9V\",\"messages\":\"dialogs_messages__1sg0D\",\"message\":\"dialogs_message__gmudl\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    \r\n\r\n    return (\r\n        <div className={s.message}>{props.message}\r\n\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n","import React from 'react';\r\nimport DialogItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport s from './dialogs.module.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    \r\n    let dialogsElements =\r\n        state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElememts =\r\n        state.messages.map(message => <Message message={message.message} key={message.id} />);\r\n\r\n    let newMessageText = state.newMessageText;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        \r\n        props.addMessage(values.newMessageText);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}> \r\n                <div>{messageElememts}</div>\r\n\r\n                <ReduxDialogsForm onSubmit={addNewMessage}/>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component=\"textarea\"\r\n            validate={[required, maxLength10]}  name=\"newMessageText\" placeholder=\"enter message\"/>\r\n        </div>\r\n\r\n    <div>\r\n        <button className=\"message-button\" >send</button>\r\n    </div>\r\n</form>\r\n    )     \r\n}\r\n\r\nconst ReduxDialogsForm = reduxForm ({form: \"dialogAddMessageForm\"}) (AddMessageForm)\r\nexport default Dialogs;","import { Component } from \"react\"\r\nimport React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=> {\r\n    return{\r\n        \r\n        isAuth: state.auth.isAuth\r\n    }\r\n    \r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props}/> //прокидываем пропсы {...props} в целеыую компоненту \r\n        }\r\n\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n        return ConnectedAuthRedirectComponent;\r\n}\r\n    ","import React from 'react';\r\nimport { addMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n// const DialogsContainer = () => {\r\n//     // debugger;\r\n\r\n//     // return <StoreContext.Consumer>\r\n//     //     { (store) => {\r\n//     //             let state = store.getState().dialogsPage;\r\n\r\n//     //             let addMessage = () => {\r\n//     //                 store.dispatch(addMessageCreator());\r\n//     //             }\r\n//     //             let onMessageChange = (text) => {\r\n\r\n//     //                 store.dispatch(updateNewMessageTextCreator(text));\r\n//     //             }\r\n//     //             return <Dialogs updateNewMessageText={onMessageChange}\r\n//     //                 addMessage={addMessage}\r\n//     //                 dialogsPage={state} />\r\n\r\n//     //         }\r\n//     //     }\r\n//     //     </StoreContext.Consumer>\r\n\r\n\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        \r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageCreator(newMessageText));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n\r\n)(Dialogs);"],"sourceRoot":""}