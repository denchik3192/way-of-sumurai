{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/ProfileInfo/profileinfo.module.css","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","LikesCount","maxLength10","maxLengthCreator","ReduxPostForm","reduxForm","form","onSubmit","handleSubmit","component","TextArea","name","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","posts","reverse","map","post","likesCount","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","ProfileInfo","status","updateStatus","profile","descriptionBlock","Profile","ProfileContainer","userId","this","match","params","authorisedUserId","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,iBAAmB,wC,wMCiBtBC,EAfF,SAACC,GACV,OAEI,sBAAKC,UAAWC,IAAEC,KAAlB,UACI,qBAAKC,IAAI,oEAAoEC,IAAI,QAC3EL,EAAMM,QACZ,gCACI,wCADJ,IACuBN,EAAMO,kBCFlCC,EAAcC,YAAiB,IAiBhCC,EAAgBC,YAAW,CAACC,KAAM,sBAAlBD,EAfC,SAACX,GACpB,OACA,uBAAMa,SAAUb,EAAMc,aAAtB,UACI,8BAEI,uBAAOC,UAAWC,IAAUC,KAAM,cAAcC,YAAY,WAC5DC,SAAU,CAACC,IAAUZ,OAGzB,8BACI,sDAoCGa,EA7BEC,IAAMC,MAAK,SAAAvB,GAExBwB,QAAQC,IAAI,gBAEZ,IAAIC,EACJ,YAAI1B,EAAM2B,OACLC,UACAC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAMxB,QAASwB,EAAKxB,QAASC,WAAYuB,EAAKC,gBAQ/D,OACI,sBAAK9B,UAAWC,IAAE8B,WAAlB,UACI,0CAEA,cAACtB,EAAD,CAAeG,SARC,SAACoB,GACrBjC,EAAMkC,QAAQD,EAAOE,gBASjB,qBAAKlC,UAAWC,IAAEyB,MAAlB,SACKD,UCIFU,EAFUC,aAfJ,SAACC,GAClB,MAAM,CACFH,YAAaG,EAAMC,YAAYJ,YAC/BR,MAAOW,EAAMC,YAAYZ,UAIT,SAACa,GACrB,MAAM,CACFN,QAAS,SAACC,GACNK,EAASC,YAAeN,QAKXE,CAA6ChB,G,kBC1BvDqB,G,OArBK,SAAC,GAAsC,EAArCC,OAAqC,EAA7BC,aAA6B,EAAfC,QAKxC,OACI,8BAII,qBAAK5C,UAAWC,IAAE4C,uBCEfC,EAVC,SAAC/C,GAEb,OADJwB,QAAQC,IAAI,gBAEJ,gCACI,cAAC,EAAD,CAAaoB,QAAS7C,EAAM6C,QAASF,OAAQ3C,EAAM2C,OAAQC,aAAc5C,EAAM4C,eAC/E,cAAC,EAAD,Q,eCANI,E,kLAEF,IAAIC,EAASC,KAAKlD,MAAMmD,MAAMC,OAAOH,OAChCA,IACHA,EAASC,KAAKlD,MAAMqD,kBAKtBH,KAAKlD,MAAMsD,eAAeL,GAC1BC,KAAKlD,MAAMuD,UAAUN,K,+BAIrB,OACE,cAAC,EAAD,2BACMC,KAAKlD,OADX,IAEE6C,QAASK,KAAKlD,MAAM6C,QACpBF,OAAQO,KAAKlD,MAAM2C,OACnBC,aAAcM,KAAKlD,MAAM4C,oB,GAnBFtB,IAAMkC,WAmCtBC,sBACbpB,aAXoB,SAACC,GAErB,MAAO,CACLO,QAASP,EAAMC,YAAYM,QAC3BF,OAAQL,EAAMC,YAAYI,OAC1BU,iBAAkBf,EAAMoB,KAAKT,OAC7BU,OAAQrB,EAAMoB,KAAKC,UAKI,CAAEL,mBAAgBC,cAAWX,mBACtDgB,IAFaH,CAIbT","file":"static/js/4.4f8ddae1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2FaR1\",\"posts\":\"MyPosts_posts__3v5xc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3d0th\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"profileinfo_descriptionBlock__3T9rX\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <img src=\"https://sun9-76.userapi.com/c5100/u120281127/a_7768e20b.jpg?ava=1\" alt=\"pic\" />\r\n                { props.message }\r\n            <div>\r\n                <span>Like</span> {props.LikesCount}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import { render } from '@testing-library/react';\r\nimport React, { Component, PureComponent } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validator';\r\nimport { TextArea } from '../../Common/FormsControls/FormsControl';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst  maxLength10 = maxLengthCreator(10  );\r\n\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n\r\n            <input component={TextArea} name =\"newPostText\" placeholder=\"new post\" \r\n            validate={[required, maxLength10]}/>\r\n            \r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nconst ReduxPostForm = reduxForm ({form: \"addPostMessageForm\"}) (addNewPostForm)\r\n\r\nconst MyPosts  = React.memo(props => {\r\n    \r\n    console.log(\"render posts\"); \r\n    \r\n    let postsElements = \r\n    [...props.posts]\r\n        .reverse()\r\n        .map(post => <Post message={post.message} LikesCount={post.likesCount} />);\r\n\r\n    // let newPostElement = React.createRef();\r\n\r\n    let addNewPostMessage = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n\r\n            <ReduxPostForm onSubmit={addNewPostMessage}/>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n//     // let state = props.store.getState();\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             { (store) =>{\r\n//                 let state = store.getState();\r\n\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostCreator());\r\n//                     } \r\n            \r\n//                 let onPostChange = (text) => {\r\n            \r\n//                     let action = updateNewPostTextCreator(text);\r\n//                     store.dispatch(action);\r\n//                 }\r\n\r\n//                 return <MyPosts updateNewPostText={onPostChange} \r\n//                 addPost={addPost} \r\n//                 posts={state.profilePage.posts}\r\n//                 newPostText={state.profilePage.newPostText}/>\r\n//             }\r\n            \r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n\r\nlet mapStateToProps =(state)=>{\r\n    return{\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        addPost: (newPostText) =>{\r\n            dispatch(addPostCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './profileinfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({status, updateStatus, profile, }) => {\r\n\r\n    // if (!profile) { to do!!!!!!!!!\r\n    //     return <Preloader/>\r\n    // }\r\n    return (\r\n        <div>\r\n            {/* <div>\r\n                <img src='https://images.wallpaperscraft.ru/image/gory_nebo_bali_voskhod_solntsa_kintamani_indoneziya_95497_1920x1080.jpg' width=\"70%\" alt=\"\" />\r\n            </div> */}\r\n            <div className={s.descriptionBlock}>\r\n            {/* <img src={profile.photos.large} alt=\"user\"/> */}\r\n                \r\n                {/* <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/> */}\r\n    \r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n// import { addPost } from '../../redux/state';\r\n\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\nconsole.log('profie check');\r\n    return (\r\n        <div>       \r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  updateStatus,\r\n  getStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorisedUserId;\r\n      // this.props.history.push(\"/login\");//toDo fix errror\r\n      // userId=14675\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  // console.log('mstp profile');\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}